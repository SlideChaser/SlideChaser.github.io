{"version":3,"sources":["reportWebVitals.js","front-page/FrontPage.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","FrontPage","useState","counter","setCounter","intervalRef","useRef","useEffect","current","clearInterval","circleAdjustStyle","height","width","Date","toLocaleString","theTime","setTheTime","show","setShow","pokemon","setPokemon","setTimeout","fetch","poop","json","obj","console","log","catch","err","className","name","onClick","onMouseDown","setInterval","prevCounter","onMouseUp","onMouseEnter","style","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wKAYeA,G,KAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,cCqFCQ,MA1Ff,WAEC,MAA8BC,mBAAS,KAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAcC,iBAAO,MAE3BC,qBAAU,WACT,OAAO,WAsBJF,EAAYG,UACXC,cAAcJ,EAAYG,SAC1BH,EAAYG,QAAU,SAvBxB,IAEH,IAAME,EAAoB,CACzBC,OAAO,GAAD,OAAKR,EAAL,MACNS,MAAM,GAAD,OAAKT,EAAL,OAuBNI,qBAAU,WACNJ,EAAU,MACZM,cAAcJ,EAAYG,SAC1BH,EAAYG,QAAU,QAErB,CAACL,IAGJ,MAA8BD,oBAAS,IAAIW,MAAOC,kBAAlD,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBd,oBAAS,GAAjC,mBAAOe,EAAP,KAAaC,EAAb,KACA,EAA8BhB,mBAAS,IAAvC,mBAAOiB,EAAP,KAAgBC,EAAhB,KAuBA,OArBAC,YAAW,WACVL,GAAW,IAAIH,MAAOC,oBAEvB,KAGAP,qBAAU,WAENU,GACFK,MAAM,6CACL3B,MAAK,SAAS4B,GAAM,OAAOA,EAAKC,UAChC7B,MAAK,SAAA8B,GACLC,QAAQC,IAAIF,GACZL,EAAWK,MAEXG,OAAM,SAAAC,GAAG,OAAEH,QAAQC,IAAI,SAAUE,QAIjC,CAACZ,IAGH,sBAAKa,UAAU,YAAf,UACC,sBAAKA,UAAU,WAAf,UACC,qBAAIA,UAAU,kBAAd,kCAAsDf,KAErDE,EACC,4BAAIE,EAAQY,OACZ,wBAAQC,QAAS,kBAAId,GAAQ,IAA7B,mBACF,4CAED,qBAAKY,UAAU,gBAAf,SAEC,qBACCG,YAlEJ,WACI5B,EAAYG,UACfH,EAAYG,QAAU0B,aAAY,kBAAK9B,GAAW,SAAA+B,GAAW,OAAIA,EAAc,OAAI,IACnFT,QAAQC,IAAItB,EAAYG,WAgErB4B,UA7DJ,WACI/B,EAAYG,UACXC,cAAcJ,EAAYG,SAC1BH,EAAYG,QAAU0B,aAAY,kBAAK9B,GAAW,SAAA+B,GAAW,OAAIA,EAAc,OAAI,KA2DpFE,aAAc,kBAAInB,GAAQ,IAAQY,UAAU,YAC5CQ,MAAO5B,UC7EZ6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BnD,K","file":"static/js/main.dd20a531.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {useState, useEffect, useRef} from 'react';\n\nfunction FrontPage(){\n\n\tconst [counter, setCounter] = useState(100);\n\tconst intervalRef = useRef(null);\n\n\tuseEffect(()=>{\n\t\treturn ()=> stopCounter(); // Stop counter when app is unmounted\n\t}, []);\n\n\tconst circleAdjustStyle = {\n\t\theight: `${counter}px`,\n\t\twidth: `${counter}px`\n\t};\n\n\tfunction startCounter(){\n\t\tif(intervalRef.current) return;\n\t\tintervalRef.current = setInterval(()=> setCounter(prevCounter => prevCounter + 1), 10);\n\t\tconsole.log(intervalRef.current);\n\t}\n\n\tfunction reverseCounter(){\n\t\tif(intervalRef.current){\n      clearInterval(intervalRef.current);\n      intervalRef.current = setInterval(()=> setCounter(prevCounter => prevCounter - 1), 1);\n    }\n\t}\n\n\tfunction stopCounter(){\n\t\tif(intervalRef.current){\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n\t}\n\n\tuseEffect(()=>{\n\t\tif(counter < 101){\n\t\t\tclearInterval(intervalRef.current);\n\t\t\tintervalRef.current = null;\n\t\t}\n\t}, [counter]);\n\n\n\tconst [theTime, setTheTime] = useState(new Date().toLocaleString());\n\tconst [show, setShow] = useState(false);\n\tconst [pokemon, setPokemon] = useState({});\n\n\tsetTimeout(()=>{\n\t\tsetTheTime(new Date().toLocaleString());\n\t},\n\t1000);\n\n\t// This useEffect is being run whenever show changes\n\tuseEffect(()=>{\n\t\t// The contents is Only being run if show is True\n\t\tif(show){\n\t\t\tfetch('https://pokeapi.co/api/v2/pokemon/pikachu')\n\t\t\t.then(function(poop){return poop.json();})\n\t\t\t.then(obj=>{\n\t\t\t\tconsole.log(obj);\n\t\t\t\tsetPokemon(obj);\n\t\t\t})\n\t\t\t.catch(err=>console.log('error:', err));\n\n\n\t\t}\n\t}, [show]);\n\n\treturn(\n\t\t<div className='frontGrid'>\n\t\t\t<div className=\"testArea\">\n\t\t\t\t<h1 className='backgroundColor'>The current time is: {theTime}</h1>\n\t\t\t\t{/* This is how we can choose what to show in jsx: */}\n\t\t\t\t{show\n\t\t\t\t? <p>{pokemon.name}</p>\n\t\t\t\t: <button onClick={()=>setShow(true)}>hello</button>}\n\t\t\t\t<h1>update?</h1>\n\t\t\t</div>\n\t\t\t<div className=\"fuzzyBallTest\">\n\t\t\t\t{/* If you try to return a function here it will run immediately. You have to put it in an arrow function so that it Functions like a callback */}\n\t\t\t\t<div\n\t\t\t\t\tonMouseDown={startCounter}\n\t\t\t\t\tonMouseUp={reverseCounter}\n\t\t\t\t\tonMouseEnter={()=>setShow(false)} className=\"fuzzyBall\"\n\t\t\t\t\tstyle={circleAdjustStyle}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default FrontPage;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport FrontPage from './front-page/FrontPage';\n\nReactDOM.render(\n  <React.StrictMode>\n    <FrontPage />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}