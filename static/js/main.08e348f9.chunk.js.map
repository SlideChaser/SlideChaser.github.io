{"version":3,"sources":["reportWebVitals.js","front-page/FrontPage.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","FrontPage","useState","counter","setCounter","click","setClick","intervalRef","useRef","circleAdjustStyle","height","width","useEffect","clearInterval","current","setInterval","prevCounter","Date","toLocaleString","theTime","setTheTime","show","setShow","pokemon","setPokemon","setTimeout","fetch","poop","json","obj","catch","err","console","log","className","name","onClick","onMouseDown","onMouseUp","onMouseEnter","style","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,6BC2ECQ,MA9Ef,WAEC,MAA8BC,mBAAS,KAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,oBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACMC,EAAcC,iBAAO,MAErBC,EAAoB,CACzBC,OAAO,GAAD,OAAKP,EAAL,MACNQ,MAAM,GAAD,OAAKR,EAAL,OAGNS,qBAAU,WACTC,cAAcN,EAAYO,SACvBT,EACCF,EAAU,KACZU,cAAcN,EAAYO,SAC1BP,EAAYO,QAAU,MAEtBP,EAAYO,QAAUC,aAAY,kBAAKX,GAAW,SAAAY,GAAW,OAAIA,EAAc,OAAI,IAG5EX,IACLF,EAAU,KACZU,cAAcN,EAAYO,SAC1BP,EAAYO,QAAU,MAEtBP,EAAYO,QAAUC,aAAY,kBAAKX,GAAW,SAAAY,GAAW,OAAIA,EAAc,OAAI,MAGnF,CAACb,EAASE,IAGb,MAA8BH,oBAAS,IAAIe,MAAOC,kBAAlD,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBlB,oBAAS,GAAjC,mBAAOmB,EAAP,KAAaC,EAAb,KACA,EAA8BpB,mBAAS,IAAvC,mBAAOqB,EAAP,KAAgBC,EAAhB,KAsBA,OApBAC,YAAW,WACVL,GAAW,IAAIH,MAAOC,oBAEvB,KAGAN,qBAAU,WAENS,GACFK,MAAM,6CACL/B,MAAK,SAASgC,GAAM,OAAOA,EAAKC,UAChCjC,MAAK,SAAAkC,GACLL,EAAWK,MAEXC,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAI,SAAUF,QAIjC,CAACV,IAGH,sBAAKa,UAAU,YAAf,UACC,sBAAKA,UAAU,WAAf,UACC,qBAAIA,UAAU,kBAAd,kCAAsDf,KAErDE,EACC,4BAAIE,EAAQY,OACZ,wBAAQC,QAAS,kBAAId,GAAQ,IAA7B,sBAEH,qBAAKY,UAAU,gBAAf,SAEC,qBACCG,YAAa,kBAAK/B,GAAS,IAC3BgC,UAAW,kBAAKhC,GAAS,IACzBiC,aAAc,kBAAIjB,GAAQ,IAAQY,UAAU,YAC5CM,MAAO/B,UClEZgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BrD,K","file":"static/js/main.08e348f9.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {useState, useEffect, useRef} from 'react';\n\nimport '../css/components/grid-system/_frontGrid.scss';\n\nfunction FrontPage(){\n\n\tconst [counter, setCounter] = useState(100);\n\tconst [click, setClick] = useState(false);\n\tconst intervalRef = useRef(null);\n\n\tconst circleAdjustStyle = {\n\t\theight: `${counter}px`,\n\t\twidth: `${counter}px`\n\t};\n\n\tuseEffect(()=>{\n\t\tclearInterval(intervalRef.current);\n\t\tif(click){\n\t\t\tif(counter > 200){\n\t\t\t\tclearInterval(intervalRef.current);\n\t\t\t\tintervalRef.current = null;\n\t\t\t}else{\n\t\t\t\tintervalRef.current = setInterval(()=> setCounter(prevCounter => prevCounter + 1), 10);\n\t\t\t}\n\t\t}\n\t\telse if(!click){\n\t\t\tif(counter < 101){\n\t\t\t\tclearInterval(intervalRef.current);\n\t\t\t\tintervalRef.current = null;\n\t\t\t}else{\n\t\t\t\tintervalRef.current = setInterval(()=> setCounter(prevCounter => prevCounter - 1), 1);\n\t\t\t}\n\t\t}\n\t}, [counter, click]);\n\n\n\tconst [theTime, setTheTime] = useState(new Date().toLocaleString());\n\tconst [show, setShow] = useState(false);\n\tconst [pokemon, setPokemon] = useState({});\n\n\tsetTimeout(()=>{\n\t\tsetTheTime(new Date().toLocaleString());\n\t},\n\t1000);\n\n\t// This useEffect is being run whenever show changes\n\tuseEffect(()=>{\n\t\t// The contents is Only being run if show is True\n\t\tif(show){\n\t\t\tfetch('https://pokeapi.co/api/v2/pokemon/pikachu')\n\t\t\t.then(function(poop){return poop.json();})\n\t\t\t.then(obj=>{\n\t\t\t\tsetPokemon(obj);\n\t\t\t})\n\t\t\t.catch(err=>console.log('error:', err));\n\n\n\t\t}\n\t}, [show]);\n\n\treturn(\n\t\t<div className='frontGrid'>\n\t\t\t<div className=\"testArea\">\n\t\t\t\t<h1 className='backgroundColor'>The current time is: {theTime}</h1>\n\t\t\t\t{/* This is how we can choose what to show in jsx: */}\n\t\t\t\t{show\n\t\t\t\t? <p>{pokemon.name}</p>\n\t\t\t\t: <button onClick={()=>setShow(true)}>hello</button>}\n\t\t\t</div>\n\t\t\t<div className=\"fuzzyBallTest\">\n\t\t\t\t{/* If you try to return a function here it will run immediately. You have to put it in an arrow function so that it Functions like a callback */}\n\t\t\t\t<div\n\t\t\t\t\tonMouseDown={()=> setClick(true)}\n\t\t\t\t\tonMouseUp={()=> setClick(false)}\n\t\t\t\t\tonMouseEnter={()=>setShow(false)} className=\"fuzzyBall\"\n\t\t\t\t\tstyle={circleAdjustStyle}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default FrontPage;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './css/index.scss';\nimport FrontPage from './front-page/FrontPage';\n\nReactDOM.render(\n  <React.StrictMode>\n    <FrontPage />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}